{"ast":null,"code":"var _jsxFileName = \"C:\\\\router example\\\\src\\\\pages\\\\QuoutDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_LIST = [{\n  id: 'q1',\n  auther: 'Max',\n  text: 'LEarn React By Fan.'\n}, {\n  id: 'q2',\n  auther: 'Enas',\n  text: 'LEarn React By Great.'\n}];\n\nconst QuoutDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  console.log(match);\n  const params = useParams();\n  const quote = DUMMY_LIST.find(quote => quote.id === params.quoutId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.auther\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/allQuouts/${params.quoutId}/comments`,\n          children: \" Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(QuoutDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuoutDetail;\nexport default QuoutDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoutDetail\");","map":{"version":3,"names":["Fragment","Route","useParams","Link","useRouteMatch","Comments","HighlightedQuote","DUMMY_LIST","id","auther","text","QuoutDetail","match","console","log","params","quote","find","quoutId","path"],"sources":["C:/router example/src/pages/QuoutDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\r\nimport { Route, useParams , Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nconst  DUMMY_LIST =[\r\n    {id:'q1' , auther:'Max' , text:'LEarn React By Fan.'},\r\n    {id:'q2' , auther:'Enas' , text:'LEarn React By Great.'},\r\n];\r\nconst QuoutDetail=()=>{\r\n    const match = useRouteMatch();\r\n    console.log(match)\r\n     const params=useParams();\r\n    const quote = DUMMY_LIST.find(quote => quote.id === params.quoutId);\r\n    if(!quote){\r\n        return <p> No quote found</p>;\r\n    }\r\n    return <Fragment>\r\n        <HighlightedQuote text={quote.text} author={quote.auther}/>\r\n        <Route path={match.path} exact>\r\n            <div className=\"centered\">\r\n                <Link className=\"btn--flat\" to={`/allQuouts/${params.quoutId}/comments`}> Load Comments</Link>\r\n            </div>\r\n        </Route>\r\n        <Route path={`${match.path}/comments`}>\r\n            <Comments/>\r\n        </Route>\r\n    </Fragment>\r\n}\r\nexport default QuoutDetail;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA4BC,IAA5B,EAAkCC,aAAlC,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AACA,MAAOC,UAAU,GAAE,CACf;EAACC,EAAE,EAAC,IAAJ;EAAWC,MAAM,EAAC,KAAlB;EAA0BC,IAAI,EAAC;AAA/B,CADe,EAEf;EAACF,EAAE,EAAC,IAAJ;EAAWC,MAAM,EAAC,MAAlB;EAA2BC,IAAI,EAAC;AAAhC,CAFe,CAAnB;;AAIA,MAAMC,WAAW,GAAC,MAAI;EAAA;;EAClB,MAAMC,KAAK,GAAGR,aAAa,EAA3B;EACAS,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACC,MAAMG,MAAM,GAACb,SAAS,EAAtB;EACD,MAAMc,KAAK,GAAGT,UAAU,CAACU,IAAX,CAAgBD,KAAK,IAAIA,KAAK,CAACR,EAAN,KAAaO,MAAM,CAACG,OAA7C,CAAd;;EACA,IAAG,CAACF,KAAJ,EAAU;IACN,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBAAO,QAAC,QAAD;IAAA,wBACH,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACN,IAA9B;MAAoC,MAAM,EAAEM,KAAK,CAACP;IAAlD;MAAA;MAAA;MAAA;IAAA,QADG,eAEH,QAAC,KAAD;MAAO,IAAI,EAAEG,KAAK,CAACO,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACI;QAAK,SAAS,EAAC,UAAf;QAAA,uBACI,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,cAAaJ,MAAM,CAACG,OAAQ,WAA7D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFG,eAOH,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEN,KAAK,CAACO,IAAK,WAA3B;MAAA,uBACI,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAPG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAWH,CAnBD;;GAAMR,W;UACYP,a,EAEAF,S;;;KAHZS,W;AAoBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}