{"ast":null,"code":"var _jsxFileName = \"C:\\\\router example\\\\src\\\\pages\\\\AllQuouts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuouts = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    error,\n    data: LoadedQuote\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === 'completed' && (!LoadedQuote || LoadedQuote.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: LoadedQuote\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AllQuouts, \"69qAaGmY/fednfKpg6fU7EBHxUE=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuouts;\nexport default AllQuouts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuouts\");","map":{"version":3,"names":["useEffect","QuoteList","useHttp","getAllQuotes","NoQuotesFound","LoadingSpinner","AllQuouts","sendRequest","status","error","data","LoadedQuote","length"],"sources":["C:/router example/src/pages/AllQuouts.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst AllQuouts=()=>{\r\n    const {sendRequest ,status ,error ,data:LoadedQuote}=useHttp(getAllQuotes,true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest();\r\n    },[sendRequest]);\r\n\r\n    \r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!LoadedQuote || LoadedQuote.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n    return <QuoteList quotes={LoadedQuote}/>\r\n}\r\nexport default AllQuouts;"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,SAAS,GAAC,MAAI;EAAA;;EAChB,MAAM;IAACC,WAAD;IAAcC,MAAd;IAAsBC,KAAtB;IAA6BC,IAAI,EAACC;EAAlC,IAA+CT,OAAO,CAACC,YAAD,EAAc,IAAd,CAA5D;EAEAH,SAAS,CAAC,MAAI;IACVO,WAAW;EACd,CAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;EAKF,IAAIC,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAIC,KAAJ,EAAW;IACT,oBAAO;MAAG,SAAS,EAAC,kBAAb;MAAA,UAAiCA;IAAjC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAID,MAAM,KAAK,WAAX,KAA2B,CAACG,WAAD,IAAgBA,WAAW,CAACC,MAAZ,KAAuB,CAAlE,CAAJ,EAA0E;IACxE,oBAAO,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACC,oBAAO,QAAC,SAAD;IAAW,MAAM,EAAED;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAxBD;;GAAML,S;UACmDJ,O;;;KADnDI,S;AAyBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}