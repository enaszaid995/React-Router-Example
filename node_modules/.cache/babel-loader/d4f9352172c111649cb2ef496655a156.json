{"ast":null,"code":"var _jsxFileName = \"C:\\\\router example\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoutId\n  } = params;\n  const {\n    sendRequest,\n    error,\n    status,\n    data: LoadedComment\n  } = useHttp(getAllComments);\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoutId);\n  }, [sendRequest, quoutId]);\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === 'completed' && LoadedComment && LoadedComment.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: LoadedComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!LoadedComment || LoadedComment.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoutId: params.quoutId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"RY3+l/qo00qRSR0GJs0bdSzJzCA=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useCallback","useParams","useHttp","getAllComments","LoadingSpinner","classes","NewCommentForm","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoutId","sendRequest","error","status","data","LoadedComment","addedCommentHandler","comments","length","startAddCommentHandler"],"sources":["C:/router example/src/components/comments/Comments.js"],"sourcesContent":["import { useState ,useCallback} from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {quoutId}= params;\n  const {sendRequest , error , status , data:LoadedComment}=useHttp(getAllComments);\n\n  \n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoutId);\n  }, [sendRequest, quoutId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && LoadedComment && LoadedComment.length > 0) {\n    comments = <CommentsList comments={LoadedComment} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!LoadedComment || LoadedComment.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n \n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoutId={params.quoutId}   onAddedComment={addedCommentHandler}/>}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAqC,OAArC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMY,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAM;IAACW;EAAD,IAAWD,MAAjB;EACA,MAAM;IAACE,WAAD;IAAeC,KAAf;IAAuBC,MAAvB;IAAgCC,IAAI,EAACC;EAArC,IAAoDf,OAAO,CAACC,cAAD,CAAjE;EAGA,MAAMe,mBAAmB,GAAGlB,WAAW,CAAC,MAAM;IAC5Ca,WAAW,CAACD,OAAD,CAAX;EACD,CAFsC,EAEpC,CAACC,WAAD,EAAcD,OAAd,CAFoC,CAAvC;EAIA,IAAIO,QAAJ;;EAEA,IAAIJ,MAAM,KAAK,SAAf,EAA0B;IACxBI,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAIJ,MAAM,KAAK,WAAX,IAA0BE,aAA1B,IAA2CA,aAAa,CAACG,MAAd,GAAuB,CAAtE,EAAyE;IACvED,QAAQ,gBAAG,QAAC,YAAD;MAAc,QAAQ,EAAEF;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAED,IACEF,MAAM,KAAK,WAAX,KACC,CAACE,aAAD,IAAkBA,aAAa,CAACG,MAAd,KAAyB,CAD5C,CADF,EAGE;IACAD,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EAGD,MAAME,sBAAsB,GAAG,MAAM;IACnCX,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,oBACE;IAAS,SAAS,EAAEL,OAAO,CAACc,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACV,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEY,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGZ,eAAe,iBAAI,QAAC,cAAD;MAAgB,OAAO,EAAEE,MAAM,CAACC,OAAhC;MAA2C,cAAc,EAAEM;IAA3D;MAAA;MAAA;MAAA;IAAA,QAPtB,eAQE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjDD;;GAAMV,Q;UAEWP,S,EAE2CC,O;;;KAJtDM,Q;AAmDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}