{"ast":null,"code":"var _jsxFileName = \"C:\\\\router example\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation, useNavigate } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  // const history=useHistory();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const changeSortHandler = () => {\n    history.push(`/allQuouts?sort=` + (isSortingAscending ? 'desc' : 'asc'));\n  };\n\n  const quouteSorting = sortQuotes(props.quotes, isSortingAscending);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: changeSortHandler,\n      style: {\n        margin: '1rem 24rem',\n        textAlign: 'center'\n      },\n      children: [\"Sort  \", isSortingAscending ? 'Descending' : 'Ascending']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: quouteSorting.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","useNavigate","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","navigate","location","queryParams","URLSearchParams","search","isSortingAscending","get","changeSortHandler","history","push","quouteSorting","margin","textAlign","list","map","quote","author","text"],"sources":["C:/router example/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation, useNavigate } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n  \n};\n\nconst QuoteList = (props) => {\n  // const history=useHistory();\n  const navigate =useNavigate();\n  const location=useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort')=== 'asc';\n\n  const changeSortHandler=()=>{\n    history.push(`/allQuouts?sort=`+(isSortingAscending? 'desc' :'asc'));    \n  }\n  const quouteSorting=sortQuotes(props.quotes,isSortingAscending);\n  return (\n    <Fragment>\n      <button className='btn' onClick={changeSortHandler} style={{margin:'1rem 24rem', textAlign:'center'} }>Sort  {isSortingAscending?'Descending':'Ascending'}</button>\n      <ul className={classes.list}>\n        {quouteSorting.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,WAAlC,QAAqD,kBAArD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AACA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EACxC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;IACrC,IAAIH,SAAJ,EAAe;MACb,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD,CAFD,MAEO;MACL,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD;EACF,CANM,CAAP;AAQD,CATD;;AAWA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B;EACA,MAAMC,QAAQ,GAAEZ,WAAW,EAA3B;EACA,MAAMa,QAAQ,GAACd,WAAW,EAA1B;EACA,MAAMe,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;EACA,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA2B,KAAtD;;EAEA,MAAMC,iBAAiB,GAAC,MAAI;IAC1BC,OAAO,CAACC,IAAR,CAAc,kBAAD,IAAoBJ,kBAAkB,GAAE,MAAF,GAAU,KAAhD,CAAb;EACD,CAFD;;EAGA,MAAMK,aAAa,GAACnB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAca,kBAAd,CAA9B;EACA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEE,iBAAjC;MAAoD,KAAK,EAAE;QAACI,MAAM,EAAC,YAAR;QAAsBC,SAAS,EAAC;MAAhC,CAA3D;MAAA,qBAA8GP,kBAAkB,GAAC,YAAD,GAAc,WAA9I;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAI,SAAS,EAAEf,OAAO,CAACuB,IAAvB;MAAA,UACGH,aAAa,CAACI,GAAd,CAAmBC,KAAD,iBACjB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAAClB,EAFZ;QAGE,MAAM,EAAEkB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAAClB,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA1BD;;GAAMC,S;UAEYV,W,EACDD,W;;;KAHXW,S;AA4BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}