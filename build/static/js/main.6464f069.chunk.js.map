{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuote.module.css","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuouts.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuout.js","pages/NotFound.js","components/quotes/HighlightedQuote.js","pages/QuoutDetail.js","App.js","index.js"],"names":["module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","className","classes","spinner","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredComment","current","value","text","quoutId","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","LoadedComment","addedCommentHandler","length","onClick","MainNavigation","styles","header","logo","nav","to","navData","isActive","active","Layout","children","QuoteItem","author","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","quouteSorting","sort","quoteA","quoteB","style","margin","textAlign","list","quote","NoQuotesFound","noquotes","AllQuouts","LoadedQuote","Card","card","QuoteForm","authorInputRef","textInputRef","enteredAuthor","enteredText","onAddQuote","isLoading","loading","NewQuout","navigte","NotFound","HighlightedQuote","QuoutDetail","console","log","auther","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6464f069.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3dkZH\",\"logo\":\"MainNavigation_logo__OFYaO\",\"nav\":\"MainNavigation_nav__2qei3\",\"active\":\"MainNavigation_active__2zoBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__uT_7V\",\"loading\":\"QuoteForm_loading__32_io\",\"control\":\"QuoteForm_control__vlaf6\",\"actions\":\"QuoteForm_actions__1nYtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3n71b\",\"loading\":\"NewCommentForm_loading__1K7OZ\",\"control\":\"NewCommentForm_control__27dt0\",\"actions\":\"NewCommentForm_actions__Dsa77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2AbZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__W7oFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3vqJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__Xkvte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2qpQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1pr0q\",\"sorting\":\"QuoteList_sorting__20zP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2Krtz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__Jt2rW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3VRZg\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://udemy-e20ae-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useRef ,useEffect} from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  \n  const{sendRequest , status, error }=useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredComment = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({commentData:{ text: enteredComment }, quoteId:props.quoutId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState ,useCallback} from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {quoutId}= params;\n  const {sendRequest  , status , data:LoadedComment}=useHttp(getAllComments);\n\n  \n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoutId);\n  }, [sendRequest, quoutId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && LoadedComment && LoadedComment.length > 0) {\n    comments = <CommentsList comments={LoadedComment} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!LoadedComment || LoadedComment.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n \n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoutId={params.quoutId}  onAddedComment={addedCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import styles from './MainNavigation.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MainNavigation =()=>{\r\n    return  <header className={styles.header}>\r\n        <div className={styles.logo}>Logo</div>\r\n        <nav className={styles.nav} >\r\n            <ul>\r\n                <li>\r\n                    <NavLink to='/allQuouts' className={(navData)=>navData.isActive?styles.active:''}>\r\n                        All Quout\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink to ='/addQuouts' className={(navData)=>navData.isActive?styles.active:''}>\r\n                        Add Quout\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n    \r\n\r\n}\r\nexport default MainNavigation;","import { Fragment } from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout=(props)=>{\r\n    return <Fragment>\r\n        <MainNavigation/>\r\n        <main>\r\n            {props.children}\r\n        </main>\r\n    </Fragment>\r\n}\r\nexport default Layout;","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/allQuouts/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport {  useLocation, useNavigate } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n  \n};\n\nconst QuoteList = (props) => {\n  // const history=useHistory();\n  const navigate =useNavigate();\n  const location=useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort')=== 'asc';\n\n  const changeSortHandler=()=>{\n    navigate(`/allQuouts?sort=`+(isSortingAscending? 'desc' :'asc'));    \n  }\n  const quouteSorting=sortQuotes(props.quotes,isSortingAscending);\n  return (\n    <Fragment>\n      <button className='btn' onClick={changeSortHandler} style={{margin:'1rem 24rem', textAlign:'center'} }>Sort  {isSortingAscending?'Descending':'Ascending'}</button>\n      <ul className={classes.list}>\n        {quouteSorting.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/addQuouts'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst AllQuouts=()=>{\r\n    const {sendRequest ,status ,error ,data:LoadedQuote}=useHttp(getAllQuotes,true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest();\r\n    },[sendRequest]);\r\n\r\n    \r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed' && (!LoadedQuote || LoadedQuote.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n    return <QuoteList quotes={LoadedQuote}/>\r\n}\r\nexport default AllQuouts;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef } from 'react';\n// import { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  // const [isEntered , setIsEntered]=useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  // const EnteredHandler=()=>{\n  //   setIsEntered(true);\n  // }\n  // const enteredSendHandler=()=>{\n  //   setIsEntered(false);\n  // }\n\n  return (\n    <Fragment>\n      {/* <Prompt when={isEntered} message={'Are you sure you want leave? All data will miss!.'}/> */}\n\n<Card>\n      <form  className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button  className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\nimport {  useNavigate } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuout=()=>{\r\n    // const history=useHistory();\r\n    const navigte =useNavigate();\r\n\r\n    const {sendRequest,status }=useHttp(addQuote);\r\n    \r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigte('/allQuouts');\r\n    }},[status,navigte]);\r\n \r\n      const AddQuoteHandler=(quote)=>{\r\n        sendRequest(quote);\r\n        // navigte('/allQuouts');\r\n    }\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={AddQuoteHandler}/>\r\n}\r\nexport default NewQuout;","import '../index.css';\r\nconst NotFound=()=>{\r\n    return <p className='centered'>\r\n        Not found page!\r\n    </p>\r\n}\r\nexport default NotFound;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment ,useEffect} from \"react\";\r\nimport { Route, useParams , Link, Outlet } from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoutDetail=()=>{\r\n    \r\n\r\n    \r\n     const params=useParams();\r\n     const { quoutId } = params;\r\n    \r\n     const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n        getSingleQuote,\r\n        true\r\n      );\r\n    \r\n  useEffect(() => {\r\n    sendRequest(quoutId);\r\n  }, [sendRequest, quoutId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered'>{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote || loadedQuote.length === 0) {\r\n    return <p>No quote found!</p>\r\n  }\r\n  console.log(loadedQuote.text);\r\n\r\n    return <Fragment>\r\n        <HighlightedQuote text={loadedQuote.text} author={loadedQuote.auther}/>\r\n        \r\n            <div className=\"centered\">\r\n                <Link className=\"btn--flat\" to={'comments'}> Load Comments</Link>\r\n            </div>\r\n        \r\n        {/* <Route path='comments' element={<Comments/>}/> */}\r\n        <Outlet/>\r\n            \r\n    </Fragment>\r\n}\r\nexport default QuoutDetail;","import { Navigate, Route, Routes } from \"react-router-dom\";\nimport Comments from \"./components/comments/Comments\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuouts from \"./pages/AllQuouts\";\nimport NewQuout from \"./pages/NewQuout\";\nimport NotFound from \"./pages/NotFound\";\nimport QuoutDetail from \"./pages/QuoutDetail\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n            <Route path='/' element={<Navigate to='/allQuouts'/>}/>\n              \n            \n            <Route path='/allQuouts/*' element={<AllQuouts/>}/>\n                \n            <Route path='/allQuouts/:quoutId' element={<QuoutDetail/>} >\n                 <Route path='comments' element={<Comments/>}/>\n            </Route>\n               \n            <Route path='/addQuouts' element={<NewQuout/>}/>\n                \n            <Route path='*' element={<NotFound/>}/>\n              \n        </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter>\n<App />\n</BrowserRouter>);\n"],"sourceRoot":""}